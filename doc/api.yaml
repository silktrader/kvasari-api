openapi: 3.0.0
info:
  title: Kvasari
  version: 1.0.0
  description: "Kvasari meets the needs of narcissistic users, craving to showcase their visual artworks, while receiving feedback in the form of immediate reactions or more articulate textual comments."
  contact:
    name: Carlo Giuseppe Tomazzoli
    email: tomazzoli.1951193@studenti.uniroma1.it
    url: "https://github.com/silktrader"
  license:
    name: GPLv3
    url: "https://spdx.org/licenses/GPL-3.0-or-later.html"
servers:
  - url: "http://localhost:3000"
    description: Development
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  responses:
    TimestampedMessage:
      description: "Successful or unsuccessful request, with description message and timestamp."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TimestampedMessage"
          example:
            Message: A message describing what went wrong with the operation and how to avoid further issues.
            Timestamp: "2022-12-02T17:03:51Z"

    TimestampedError:
      description: Hopefully handled internal server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TimestampedError"
          example:
            Error: Something horrible occurred
            Timestamp: "2022-12-02T17:34:33Z"

  parameters:
    UserAlias:
      name: alias
      description: User alias that uniquely identifies them.
      in: path
      required: true
      schema:
        type: string
        example: gklimt
        minLength: 5
        maxLength: 16
        pattern: ^[a-z0-9_-]{5,16}$

    Target:
      name: target
      description: User alias that uniquely identifies them.
      in: path
      required: true
      schema:
        type: string
        minLength: 5
        maxLength: 16
        pattern: ^[a-z0-9_-]{5,16}$

    ArtworkID:
      name: artworkId
      description: Randomly generated unique identifier of an artwork.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        minLength: 36
        maxLength: 36
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08

  schemas:
    TimestampedMessage:
      title: Timestamped Message
      type: object
      description: A server message and its date of inception.
      properties:
        Message:
          type: string
          description: "An ideally helpful message describing bad requests, not found resources, etc."
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
      required:
        - Message
        - Timestamp

    TimestampedError:
      title: Timestamped Error
      type: object
      description: A server error and its date of inception.
      properties:
        Error:
          type: string
          description: "Error message stripped of debug information, for security purposes"
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
      required:
        - Error
        - Timestamp

    UserRegistrationResponse:
      title: User Registration
      type: object
      description: User data following their registration
      properties:
        Id:
          $ref: "#/components/schemas/UUID"
        Alias:
          $ref: "#/components/schemas/UserAlias"
        Name:
          $ref: "#/components/schemas/UserName"
        Email:
          $ref: "#/components/schemas/Email"
        Created:
          $ref: "#/components/schemas/Timestamp"
        Updated:
          $ref: "#/components/schemas/Timestamp"

    UserBans:
      title: User Bans
      type: array
      description: List of users banned by the requester
      minItems: 0
      maxItems: 1000
      uniqueItems: true
      items:
        type: object
        properties:
          Id:
            $ref: "#/components/schemas/UUID"
          Alias:
            $ref: "#/components/schemas/UserAlias"
          Name:
            $ref: "#/components/schemas/UserName"
          Banned:
            $ref: "#/components/schemas/Timestamp"
        required:
          - Id
          - Alias
          - Name
          - Banned

    BannedUserResponse:
      title: Banned User Response
      type: object
      description: Data related to the banning of a user
      properties:
        Alias:
          $ref: "#/components/schemas/UserAlias"
        Banned:
          $ref: "#/components/schemas/Timestamp"

    FollowersResponse:
      title: User Followers
      description: An array comprising the data of users who follow a given source.
      type: array
      minItems: 0
      maxItems: 1000
      items:
        type: object
        properties:
          Id:
            $ref: "#/components/schemas/UUID"
          Alias:
            $ref: "#/components/schemas/UserAlias"
          Name:
            $ref: "#/components/schemas/UserName"
          Email:
            $ref: "#/components/schemas/Email"
          Followed:
            $ref: "#/components/schemas/Timestamp"

    FollowedUserResponse:
      title: Followed User Response
      type: object
      description: Date and confirmation of following a user
      additionalProperties: false
      properties:
        Alias:
          $ref: "#/components/schemas/UserAlias"
        Followed:
          $ref: "#/components/schemas/Timestamp"

    CreatedCommentResponse:
      title: Created Comment Response
      type: object
      description: "ID and timestamp of the posted comment, for display and future deletion or editing"
      additionalProperties: false
      properties:
        Id:
          $ref: "#/components/schemas/UUID"
        Date:
          $ref: "#/components/schemas/Timestamp"

    ReactedResponse:
      title: User Reaction Response
      type: object
      description: "Confirmation of the recorded reaction type and date"
      additionalProperties: false
      properties:
        Reaction:
          $ref: "#/components/schemas/Reaction"
        Date:
          $ref: "#/components/schemas/Timestamp"

    UserAlias:
      title: User Alias
      description: A unique user alias
      type: string
      example: gklimt
      minLength: 5
      maxLength: 16
      pattern: "^[a-z0-9_-]{5,16}$"

    UserName:
      title: User Name
      description: A user's full name
      type: string
      example: Gustav Klimt
      minLength: 5
      maxLength: 50
      pattern: ^[\w'\-,.]*[^_!¡?÷?¿\/\\+=@#$%ˆ&*(){}|~<>;:[\]]*$

    UserPassword:
      title: User Password
      description: A user chosen password
      type: string
      format: password
      example: notastrong_password_AT_4ll
      minLength: 8
      maxLength: 50
      pattern: '[\s\S]*'

    Email:
      title: Email
      description: A user provided email address, guaranteed to be unique.
      type: string
      format: email
      example: silktrader@gmail.com
      minLength: 5
      maxLength: 100
      pattern: '[^@ \t\r\n]+@[^@ \t\r\n]+\.[^@ \t\r\n]+'

    UUID:
      title: UUID
      description: "Randomly generated (almost) universally unique identifier, i.e. UUIDv4"
      type: string
      format: uuid
      minLength: 36
      maxLength: 36
      example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
      pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$

    Timestamp:
      title: Timestamp
      description: RFC3339 encoded UTC time
      type: string
      format: date-time
      minLength: 20
      maxLength: 20
      example: "2019-08-24T14:15:22Z"

    Reaction:
      title: Reaction
      description: A user reaction to an artwork.
      type: string
      enum:
        - Like
        - Perplexed

    ArtworkType:
      title: Artwork's Type
      description: The artwork's visual medium.
      type: string
      enum:
        - Painting
        - Drawing
        - Sculpture
        - Photograph
        - Architecture

    ArtworkTitle:
      title: Artwork's Title
      description: An optional title describing the artwork.
      type: string
      minLength: 1
      maxLength: 250
      pattern: '[\s\S]*'

    PictureURL:
      title: PictureURL
      description: The HTTP URL of a picture, terminating with a valid format extension.
      type: string
      pattern: '^https?://(?:[a-z0-9\-]+\.)+[a-z]{2,6}(?:/[^/#?]+)+\.(?:jpg|gif|png)$'
      minLength: 0
      maxLength: 160
      format: url
      example: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Gustav_Klimt_010.jpg/1024px-Gustav_Klimt_010.jpg"

    AuthenticationResponse:
      type: object
      description: The authentication attempt's result, including the requesting user ID and a status message.
      properties:
        Id:
          $ref: "#/components/schemas/UUID"
        Name:
          $ref: "#/components/schemas/UserName"
        Alias:
          $ref: "#/components/schemas/UserAlias"
        Status:
          description: A status describing the operation, temporarily limited to "authenticated".
          type: string
      example:
        Id: c09cb1fd-495f-4f63-84dc-87c15a2f7740
        Status: authenticated

security:
  - bearerAuth: []

tags:
  - name: Artworks
    description: "Endpoints allowing artworks to be added, removed, edited or simply viewed."
  - name: Feedback
    description: Endpoints permitting and facilitating users interactions, such as leaving reactions or comments.
  - name: User Management
    description: Endpoints related to users administration.
  - name: User Relationships
    description: "Endpoints regulating users bans and followers, their addition and removal."

paths:
  /sessions:
    post:
      summary: Login
      description: |-
        Performs a simplistic authentication attempt, returning the user ID and status on success. Passwords aren't checked; only mere user existence is verified.

        Ideally the response would contain access and refresh JWT tokens, with adequate claims.

        The endpoint doesn't create new users, but mandates that action to another route.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The user's authorisation credentials.
              properties:
                Alias:
                  $ref: "#/components/schemas/UserAlias"
                Password:
                  $ref: "#/components/schemas/UserPassword"
              required:
                - Alias
                - Password
            example:
              Alias: eschiele
              Password: notusedbutstored
      responses:
        "201":
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
      operationId: doLogin
      tags:
        - User Management
  /users:
    post:
      tags:
        - User Management
      summary: Register User
      description: "Register a new user given their unique alias and email. Set the initial full name and a token, unused, password."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: User basic details, provided during registration, aimed at identifying them.
              properties:
                Name:
                  $ref: "#/components/schemas/UserName"
                Alias:
                  $ref: "#/components/schemas/UserAlias"
                Email:
                  $ref: "#/components/schemas/Email"
                Password:
                  $ref: "#/components/schemas/UserPassword"
            example:
              Name: John Everett Millais
              Alias: millais
              Email: jem@gmail.com
              Password: pa$$word
      responses:
        "201":
          description: User Registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRegistrationResponse"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: registerUser
  "/users/{alias}/name":
    put:
      tags:
        - User Management
      summary: Edit User Name
      description: Change the specified user's full name to a new value.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The new user name.
              properties:
                Name:
                  $ref: "#/components/schemas/UserName"
              required:
                - Name
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: setMyUserName
    parameters:
      - $ref: "#/components/parameters/UserAlias"
  "/users/{alias}/alias":
    put:
      summary: Edit User Alias
      description: Change the specified user's alias to a new unique value.
      requestBody:
        content:
          application/json:
            schema:
              description: The new unique user alias.
              type: object
              properties:
                Alias:
                  $ref: "#/components/schemas/UserAlias"
              required:
                - Alias
        description: "A new user alias"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: editAlias
      tags:
        - User Management
    parameters:
      - $ref: "#/components/parameters/UserAlias"

  "/users/{alias}/bans":
    get:
      summary: Get Bans
      description: "Fetch the users banned by the selected alias, provided authorised credentials."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserBans"
              examples:
                common:
                  value:
                    - Id: 38dc5047-db66-46b4-81a7-f77bd84d0516
                      Alias: waterhouse
                      Name: John William Waterhouse
                      Banned: "2022-12-02T19:13:57Z"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: getBans
      tags:
        - User Relationships
    post:
      summary: Ban User
      description: "Allows the authorised user to ban a target, by specifying their unique alias."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The alias of the user to be banned.
              properties:
                TargetAlias:
                  $ref: "#/components/schemas/UserAlias"
            example:
              TargetAlias: waterhouse
      responses:
        "201":
          description: User Banned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BannedUserResponse"
              example:
                Alias: gklimt
                Banned: "2022-11-27T19:55:34Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: banUser
      tags:
        - User Relationships
    parameters:
      - $ref: "#/components/parameters/UserAlias"

  "/users/{alias}/bans/{target}":
    delete:
      summary: Unban User
      description: "Removes the authorised user's ban on the target, restoring the latter's ability to view artworks and follow the source."
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          $ref: "#/components/responses/TimestampedMessage"
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: unbanUser
      tags:
        - User Relationships
    parameters:
      - $ref: "#/components/parameters/UserAlias"
      - $ref: "#/components/parameters/Target"

  "/users/{alias}/followers":
    get:
      summary: Get Followers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FollowersResponse"
              examples:
                common:
                  value:
                    - ID: 637c8e48-6e0b-4b6c-acc4-a0ff293dcac2
                      Alias: gklimt
                      Name: Gustav Klimt
                      Email: klimt@gmail.com
                      Followed: "2022-11-27T19:55:34Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: getFollowers
      description: |-
        Fetches all the users who follow the specified alias.
        No authorisation is required, temporarily, for development's purposes.
      deprecated: true
      tags:
        - User Relationships
    parameters:
      - $ref: "#/components/parameters/UserAlias"

  "/users/{alias}/followed":
    post:
      summary: Follow User
      requestBody:
        content:
          application/json:
            schema:
              description: The alias of the user to be followed.
              type: object
              properties:
                targetAlias:
                  $ref: "#/components/schemas/UserAlias"
              required:
                - targetAlias
        description: The unique alias matching the target user to follow.
      responses:
        "201":
          description: User Followed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FollowedUserResponse"
              example:
                Alias: gklimt
                Followed: "2022-11-27T19:55:34Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: followUser
      description: "Allows a user to follow another one, thereby receiving news of their posted artwork."
      tags:
        - User Relationships
    parameters:
      - $ref: "#/components/parameters/UserAlias"

  "/users/{alias}/followed/{target}":
    delete:
      summary: Unfollow User
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: unfollowUser
      description: Removes the target user from the ones followed by the requesting user.
      tags:
        - User Relationships
    parameters:
      - $ref: "#/components/parameters/UserAlias"
      - $ref: "#/components/parameters/Target"

  "/artworks/{artworkId}/comments":
    post:
      summary: Add Artwork Comment
      requestBody:
        content:
          application/json:
            schema:
              description: Artwork feedback in the form of a long plain text comment.
              type: object
              properties:
                Comment:
                  type: string
                  description: "A possibly constructive comment, limited to 3000 characters, but no shorter than 10"
                  minLength: 10
                  maxLength: 3000
                  pattern: '[\s\S]*'
              required:
                - Comment
            example:
              Comment: One of his most memorable works.
        description: "A textual commment, unformatted, limited to 3000 characters"
      responses:
        "201":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedCommentResponse"
              example:
                Id: 4b6cc7c6-cad5-4585-9aca-8cf425319345
                Date: "2022-12-04T09:53:56Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "500":
          $ref: "#/components/responses/TimestampedError"
      tags:
        - Feedback
      operationId: commentPhoto
      description: Allows users to leave a comment on theirs or another user's artwork.
    parameters:
      - $ref: "#/components/parameters/ArtworkID"

  "/artworks/{artworkId}/comments/{commentId}":
    delete:
      summary: Delete Artwork Comment
      responses:
        "204":
          description: Artwork Deleted
        "401":
          description: Unauthorized
        "404":
          $ref: "#/components/responses/TimestampedMessage"
        "500":
          $ref: "#/components/responses/TimestampedError"
      tags:
        - Feedback
      operationId: uncommentPhoto
      description: Removes a previously recorded comment.
    parameters:
      - $ref: "#/components/parameters/ArtworkID"
      - schema:
          $ref: "#/components/schemas/UUID"
        name: commentId
        in: path
        required: true
        description: The randomly generated unique identifier of a user comment
        example: "0e0dcd46-ef66-4b88-8b53-969385df4bce"

  "/artworks/{artworkId}/reactions/{alias}":
    put:
      summary: Set Artwork Reaction
      requestBody:
        content:
          application/json:
            schema:
              description: "A reaction, to be chosen among available adjectives and nouns, such as: Like, Perplexed, Admirative, etc."
              type: object
              example:
                Reaction: Like
              additionalProperties: false
              properties:
                Reaction:
                  $ref: "#/components/schemas/Reaction"
        description: "The user's reaction elicited by the artwork"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReactedResponse"
              example:
                Reaction: "Like"
                Date: "2022-12-04T09:53:56Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      tags:
        - Artworks
        - Feedback
      operationId: likePhoto
      description: |
        Allows users to react to another user's artwork, by selecting from a limited range of mutually exclusive options, such as "like", or "perplexed".
    parameters:
      - $ref: "#/components/parameters/ArtworkID"
      - $ref: "#/components/parameters/UserAlias"
    delete:
      summary: "Remove a reaction"
      operationId: unlikePhoto
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          $ref: "#/components/responses/TimestampedError"
      description: Remove a previously expressed reaction.
      tags:
        - Artworks
        - Feedback
  /artworks:
    post:
      summary: Add Artwork
      requestBody:
        content:
          application/json:
            schema:
              description: Artwork's picture, along with its required and optional metadata.
              type: object
              properties:
                AuthorId:
                  $ref: "#/components/schemas/UUID"
                Title:
                  $ref: "#/components/schemas/ArtworkTitle"
                Description:
                  type: string
                  description: An optional concise description of the artwork.
                  minLength: 3
                  maxLength: 1000
                  pattern: '[\s\S]*'
                PictureUrl:
                  $ref: "#/components/schemas/PictureURL"
                Location:
                  type: string
                  description: An optional mention of the artwork's current location.
                  pattern: '[\s\S]*'
                  minLength: 3
                  maxLength: 120
                Year:
                  type: integer
                  description: "An approximate estimate of the year when the artwork was created, often used when precise creation dates can't be ascertained."
                  minimum: -10000
                  maximum: 10000
                Type:
                  $ref: "#/components/schemas/ArtworkType"
                Created:
                  $ref: "#/components/schemas/Timestamp"
              required:
                - AuthorId
                - PictureUrl
                - Type
            examples:
              common:
                value:
                  Title: Danaë
                  Description: "Danaë was a popular subject in the early 1900s for many artists; she was used as the quintessential symbol of divine love, and transcendence."
                  PictureUrl: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Gustav_Klimt_010.jpg/1024px-Gustav_Klimt_010.jpg"
                  Location: "Galerie Würthle, Vienna"
                  Year: 1907
                  Type: Painting
                  AuthorId: f295c60a-60bf-495e-be9f-32882dac63ca
        description: Artwork's picture and metadata.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                description: The server generated artwork ID, along with its date of insertion, which matches its last update.
                type: object
                properties:
                  Id:
                    $ref: "#/components/schemas/UUID"
                  Updated:
                    $ref: "#/components/schemas/Timestamp"
              example:
                Id: f295c60a-60bf-495e-be9f-32882dac63ca
                Updated: "2022-12-02T22:49:54Z"
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      tags:
        - Artworks
      operationId: uploadPhoto
      description: "Allows authenticated users to post their artwork and related metadata, such as titles, descriptions, location tags, etc."
    parameters: []
  "/artworks/{artworkId}":
    delete:
      tags:
        - Artworks
      summary: Delete Artwork
      responses:
        "204":
          description: Deleted
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
      operationId: deletePhoto
      description: "Removes a previously posted artwork, ensuring the acting user has appropriate rights."
    parameters:
      - $ref: "#/components/parameters/ArtworkID"
  "/users/{alias}/profile":
    get:
      tags:
        - Artworks
        - User Relationships
      summary: Get User Profile
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                description: Data pertaining to the user's profile page, including previews of user's artworks, as well as their followers and followed peers.
                properties:
                  TotalArtworks:
                    type: integer
                    minimum: 0
                    description: The total number of artworks uploaded by the user
                  Artworks:
                    type: array
                    minItems: 0
                    maxItems: 12
                    description: The latest uploaded artworks
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        Id:
                          $ref: "#/components/schemas/UUID"
                        Title:
                          $ref: "#/components/schemas/ArtworkTitle"
                        PictureURL:
                          $ref: "#/components/schemas/PictureURL"
                        Added:
                          $ref: "#/components/schemas/Timestamp"
                  Followers:
                    type: array
                    minItems: 0
                    maxItems: 1000
                    description: The users following the profile's owner.
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        Id:
                          $ref: "#/components/schemas/UUID"
                        Alias:
                          $ref: "#/components/schemas/UserAlias"
                        Name:
                          $ref: "#/components/schemas/UserName"
                        Date:
                          $ref: "#/components/schemas/Timestamp"
                  FollowedUsers:
                    type: array
                    minItems: 0
                    maxItems: 1000
                    description: The users followed by the profile's owner.
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        Id:
                          $ref: "#/components/schemas/UUID"
                        Alias:
                          $ref: "#/components/schemas/UserAlias"
                        Name:
                          $ref: "#/components/schemas/UserName"
                        Date:
                          $ref: "#/components/schemas/Timestamp"
                required:
                  - TotalArtworks
                  - Artworks
                  - Followers
                  - FollowedUsers
              examples:
                common:
                  value:
                    TotalArtworks: 3
                    Artworks:
                      - Id: 6fb46dc0-9f6e-4f21-8b82-513bc746e15e
                        Title: Danaë 2
                        PictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Gustav_Klimt_010.jpg/1024px-Gustav_Klimt_010.jpg"
                        Added: "2022-12-04T12:08:31Z"
                      - Id: 0e0dcd46-ef66-4b88-8b53-969385df4bce
                        Title: Danaë 2
                        PictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Gustav_Klimt_010.jpg/1024px-Gustav_Klimt_010.jpg"
                        Added: "2022-12-04T11:03:37Z"
                      - Id: 6c145ddb-3152-488e-9724-5aeefd9d8862
                        Title: Death and the Maiden
                        PictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Egon_Schiele_012.jpg/1280px-Egon_Schiele_012.jpg"
                        Added: "2022-12-01T22:54:12Z"
                    Followers:
                      - Id: 637c8e48-6e0b-4b6c-acc4-a0ff293dcac2
                        Alias: gklimt
                        Name: Gustav Klimt
                        Date: "2022-11-27T19:55:34Z"
                    FollowedUsers:
                      - Id: 637c8e48-6e0b-4b6c-acc4-a0ff293dcac2
                        Alias: gklimt
                        Name: Gustav Klimt
                        Date: "2022-11-27T19:39:51Z"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: getUserProfile
      description: |-
        Provides authenticated users with a snapshot of their own activities; including their latest artworks, as well as the total number of uploads.
        Details about followed users and followers are also included.
    parameters:
      - $ref: "#/components/parameters/UserAlias"
  "/users/{alias}/stream":
    get:
      tags:
        - Artworks
      summary: Get User Stream
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            minLength: 20
            maxLength: 20
            example: "2022-12-02T02:46:05Z"
            pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
          example: "2022-12-02T02:46:05Z"
          required: true
          description: The date and time of the earliest update fetched
        - name: latest
          in: query
          schema:
            type: string
            format: date-time
            minLength: 20
            maxLength: 20
            example: "2022-12-02T02:46:05Z"
            pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
          example: "2022-12-02T15:04:05Z"
          required: true
          description: The date and time of the latest update received
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                description: |-
                  Artworks pictures and metadata used to populate a user's personal stream.
                  The `Artworks` collection comprises the latest twelve items, in reverse chronological order, added by followed peers, starting from the date specified in the `since` query parameter.
                  `NewArtworks` contains those items that were added since the `latest` query parameter.
                  `RemovedIds` marks artworks that were since deleted, and that may need to be scrapped from a collection built on previous responses.
                properties:
                  Artworks:
                    description: Twelve artworks or fewer, sorted by their date of upload, in descending order.
                    type: array
                    minItems: 0
                    maxItems: 12
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        Id:
                          $ref: "#/components/schemas/UUID"
                        Title:
                          $ref: "#/components/schemas/ArtworkTitle"
                        AuthorAlias:
                          $ref: "#/components/schemas/UserAlias"
                        AuthorName:
                          $ref: "#/components/schemas/UserName"
                        PictureURL:
                          $ref: "#/components/schemas/PictureURL"
                        Reactions:
                          type: integer
                          description: "The number of reactions elicited by the artwork."
                          minimum: 0
                          maximum: 100000
                        Comments:
                          type: integer
                          description: "The number of comments elicited by the artwork."
                          minimum: 0
                          maximum: 100000
                        Added:
                          $ref: "#/components/schemas/Timestamp"
                  NewArtworks:
                    description: Artworks added after the `latest` timestamp provided in the request query.
                    type: array
                    minItems: 0
                    maxItems: 100
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        Id:
                          $ref: "#/components/schemas/UUID"
                        Title:
                          $ref: "#/components/schemas/ArtworkTitle"
                        PictureURL:
                          $ref: "#/components/schemas/PictureURL"
                        Reactions:
                          type: integer
                          description: "The number of reactions elicited by the artwork."
                          minimum: 0
                          maximum: 100000
                        Comments:
                          type: integer
                          description: "The number of comments elicited by the artwork."
                          minimum: 0
                          maximum: 100000
                        Added:
                          $ref: "#/components/schemas/Timestamp"
                  DeletedIds:
                    description: Artworks removed after the `latest` timestamp, in the request query, and before the `since` one.
                    type: array
                    minItems: 0
                    maxItems: 100
                    items:
                      $ref: "#/components/schemas/UUID"
                required:
                  - Artworks
                  - NewArtworks
                  - DeletedIds
              examples:
                common:
                  value:
                    Artworks:
                      - Id: 44de4ffa-ccdd-478f-94c2-8faad6e46aaf
                        Title: Danaë
                        PictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Gustav_Klimt_010.jpg/1024px-Gustav_Klimt_010.jpg"
                        Added: "2022-12-01T23:22:04Z"
                      - Id: ab84e3a6-3a60-40d3-a039-20ecf06cc936
                        Title: The Kiss
                        PictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Klimt_-_Der_Kuss.jpeg/607px-Klimt_-_Der_Kuss.jpg"
                        Added: "2022-11-28T11:43:18Z"
                    NewArtworks: []
                    DeletedIds: []
        "400":
          $ref: "#/components/responses/TimestampedMessage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: "#/components/responses/TimestampedError"
      operationId: getMyStream
      description: |-
        Summarises all the user's recent activity: artworks are fetched, in reverse chronological order, by the dozen.
        With the purpose of building a continuous stream, users are expected to make multiple requests to this endpoint, with changing timestamps, to obtain an ever expanding view of previously uploaded artworks.
        The "since" timestamp signals the earliest time point reached, whence the next dozen artworks, in reverse chronological order, will be provided.
        The "latest" timestamp indicates the current user time, which allows the server to communicate artworks uploaded after that moment, as well as deleted artworks' IDs, which may have been included in previous responses.
    parameters:
      - $ref: "#/components/parameters/UserAlias"
